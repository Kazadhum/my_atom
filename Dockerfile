# This Dockerfile was generated by Rigel.
############################################################################

# Use an intermediate stage to clone external repositories without
# compromising the security of any private SSH key.
FROM ros:noetic as intermediate

RUN apt clean && apt update && apt install -y \
    git \
    python3-rosinstall \
    python3-vcstool \
    ssh

RUN mkdir -p /root/.ssh/



# Ensure hosts are accepted.
RUN touch /root/.ssh/known_hosts

RUN mkdir -p /ros_workspace/src



# Clone repositories from .repos or .rosinstall.
RUN cd /ros_workspace \ 
    && /bin/bash -c "source /opt/ros/noetic/setup.bash \
    " && echo

############################################################################

FROM ros:noetic

# Set required environment variables.
ENV GAZEBO_VERSION=gazebo-11

# Install dependencies.
RUN sudo apt clean && sudo apt update && sudo apt install -y \
    build-essential \
    python3-rosdep \
    xfce4-terminal \
    ros-noetic-ros-numpy \
    python3-pip \
    git-all \
    qtbase5-dev \
    qtdeclarative5-dev \
    python3-rosdep \
    curl \
    ros-noetic-gazebo-ros \
    ros-noetic-gazebo-ros-pkgs \
    ros-noetic-gazebo-ros-control \
    ros-noetic-robot-state-publisher \
    ros-noetic-xacro \
    ros-noetic-rqt \
    ros-noetic-rosbridge* \
    xvfb \
    python3-pip \
    python3-venv \
    
    ssh

# Execute additional commands.
RUN pip3 install rospy_message_converter
RUN pip3 install opencv-contrib-python==4.6.0.66
RUN pip3 install JSON-minify
RUN pip3 install jinja2
RUN pip3 install alphashape
RUN pip3 install descartes
RUN pip3 install colorama
RUN pip3 install graphviz
RUN pip3 install pandas
RUN pip3 install pynput
RUN pip3 install scipy
RUN pip3 install networkx
RUN pip3 install prettytable
RUN pip3 install readchar
RUN pip3 install urdf-parser-py
RUN pip3 install SQLAlchemy
RUN pip3 install open3d
RUN pip3 install pytictoc
RUN pip3 install numpy==1.24.4
RUN mkdir -p home/rigeluser/ros_workspace/src
RUN cd home/rigeluser/ros_workspace/src
RUN git clone https://github.com/miguelriemoliveira/rviz home/rigeluser/ros_workspace/src/rviz


# Create default user 'rigeluser'.
ARG USERNAME=rigeluser
RUN groupadd $USERNAME
RUN useradd -ms /bin/bash -g $USERNAME $USERNAME

# Create ROS workspace folder
RUN mkdir -p /home/$USERNAME/ros_workspace/src

# Create virtual environment for Python dependencies
RUN python3 -m venv /home/$USERNAME/ros_workspace/.venv



# Set user as ROS workspace owner
RUN sh -c 'echo "$USERNAME ALL=(root) NOPASSWD:ALL" >> /etc/sudoers'
RUN sh -c 'sudo chown -R rigeluser:rigeluser /home/rigeluser'
USER $USERNAME

# Copy this repository into the ROS workspace.
COPY . /home/rigeluser/ros_workspace/src/atom

# Copy bringup script.
COPY dockerfile_entrypoint.sh /home/rigeluser/robot-entrypoint.sh

# Compile ROS workspace.
RUN /bin/bash -c "source /opt/ros/noetic/setup.bash \ 
    && cd /home/rigeluser/ros_workspace \
    
    && sudo rosdep fix-permissions \
    && rosdep update \
    && rosdep install --rosdistro noetic --from-paths src --ignore-src -r -y \
    && catkin_make "
    

# Give permissions to user
RUN sh -c 'sudo chmod +x /home/rigeluser/robot-entrypoint.sh'
RUN sh -c 'sudo chown rigeluser:rigeluser /home/rigeluser/robot-entrypoint.sh'

# Launch ROS application.
ENTRYPOINT [ "/home/rigeluser/robot-entrypoint.sh" ]