# This file was generate by RIGEL.
# Feel free to alter it according to your needs.

---

vars:

  
  distro: "noetic"
  username: "robomaker"
  robomaker_tool_gazebo_cmd: "source /home/rigeluser/robot-entrypoint.sh && gzclient"
  robomaker_tool_terminal_cmd: "source /home/rigeluser/robot-entrypoint.sh && xfce4-terminal"
  robomaker_tool_rviz_cmd: "source /home/rigeluser/robot-entrypoint.sh && rviz"
  docker_server: "" # If empty this leads to the dockerhub server by default

providers:
  dockerhub:
    provider: "rigel.providers.core.ContainerRegistryProvider"
    with:
      server: "{{ vars.docker_server }}"
      username: "{{ vars.DOCKER_USERNAME }}"
      password: "{{ vars.DOCKER_PASSWORD }}"
  
  # aws:
    # provider: "rigel.providers.aws.AWSProvider"
    # with:
      # aws_access_key_id: "{{ vars.AWS_ACCESS_KEY_ID }}"
      # aws_secret_access_key: "{{ vars.AWS_SECRET_ACCESS_KEY }}" 
      # region_name: "{{ vars.AWS_REGION_NAME }}"
      # ecr_servers:
        # - "{{ vars.AWS_ECR }}"
      # services: ["ecr", "robomaker"]

application:

  distro: "{{ vars.distro }}"

jobs:

  dockerfile:
    plugin: "rigel.plugins.core.DockerfilePlugin"
    with:

      env:
        - name: GAZEBO_VERSION
          value: gazebo-11

      apt:
        - "xfce4-terminal"
        - "ros-noetic-ros-numpy"
        - "python3-pip"
        - "git-all"
        - "qtbase5-dev"
        - "qtdeclarative5-dev"
        - "python3-rosdep"
        - "curl"
        - "ros-noetic-gazebo-ros"
        - "ros-noetic-gazebo-ros-pkgs"
        - "ros-noetic-gazebo-ros-control"
        - "ros-noetic-robot-state-publisher"
        - "ros-noetic-xacro"
        - "ros-noetic-rqt"
        - "ros-{{ vars.distro }}-rosbridge*" # testing
        - "xvfb"

      compiler:
        name: "catkin_make"
      docker_run:
        - "pip3 install rospy_message_converter"
        - "pip3 install opencv-contrib-python==4.6.0.66"
        - "pip3 install JSON-minify"
        - "pip3 install jinja2"
        - "pip3 install alphashape"
        - "pip3 install descartes"
        - "pip3 install colorama"
        - "pip3 install graphviz"
        - "pip3 install pandas"
        - "pip3 install pynput"
        - "pip3 install scipy"
        - "pip3 install networkx"
        - "pip3 install prettytable"
        - "pip3 install readchar"
        - "pip3 install urdf-parser-py"
        - "pip3 install SQLAlchemy"
        - "pip3 install open3d"
        - "pip3 install pytictoc"
        - "pip3 install numpy==1.24.4"
        - "pip3 install transformations" # New
        - "pip3 install scikit-image"


        # Podes tamb√©m criar um ficheiro .rosinstall com os gits publicos que precisas <--- recomendo isto
        - "mkdir -p home/rigeluser/ros_workspace/src"
        - "cd home/rigeluser/ros_workspace/src"
        - "git clone https://github.com/miguelriemoliveira/rviz home/rigeluser/ros_workspace/src/rviz"


      # command: "bash -c 'source ~/ros_workspace/devel/setup.bash'" 
      entrypoint:
        - "if [[ -f \"/usr/share/$GAZEBO_VERSION/setup.sh\" ]]; then source /usr/share/$GAZEBO_VERSION/setup.sh; fi"
        - "export GAZEBO_RESOURCE_PATH=$GAZEBO_RESOURCE_PATH/usr/share/gazebo-11:"
        - "export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH/usr/share/gazebo-11/meshes:"
        # - "export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:/home/rigeluser/ros_workspace/src/t2rgb/t2rgb_description/models:"
        - export WORKSPACE_INSTALL="home/rigeluser/ros_workspace/devel"
        - export ATOM_DATASETS="$HOME/ros_workspace/src/atom/ci_datasets"
        - source $WORKSPACE_INSTALL/setup.bash
        # - rosrun rosbridge_server rosbridge_websocket & # Testing
        - "cd home/rigeluser/ros_workspace/src/atom/atom_examples"
        - "chmod 777 -R ./"
        - "cd home/rigeluser/ros_workspace/src/atom/ci_datasets"
        - "chmod 777 -R ./"

  build:
    plugin: "rigel.plugins.core.BuildXPlugin"
    with:
      image: "dvieira2001/atom"
      tags: ["{{ vars.distro }}"]
      load: False
      push: True
      # platforms:
      #   - "linux/amd64"
      #   - "linux/arm64"

  calibrate_rrbot:
    plugin: "rigel.plugins.core.ComposePlugin"
    with:
      timeout: 300.0
      components:
        # -
        #   name: "simulation_and_robot"
        #   image: "dvieira2001/atom:latest"
        #   command: ["roslaunch", "t2rgb_bringup", "t2rgb.launch"]
        #   envs:
        #     DISPLAY: "{{ vars.DISPLAY }}"
          
          # volumes:
          #   - !!python/tuple ["/tmp/.X11-unix", "/tmp/.X11-unix"]
        -
            name: "calibration_evaluation"
            image: "atom:latest"

            artifacts: 
              - "/home/rigeluser/rgb_to_rgb_results.csv"

            command: ["/bin/bash", "-c", "xvfb-run -a rosrun atom_calibration calibrate -json $ATOM_DATASETS/rrbot/train/dataset.json -nig {{ data.trans_noise }} {{ data.rot_noise }} -v && xvfb-run -a rosrun atom_evaluation rgb_to_rgb_evaluation -train_json $ATOM_DATASETS/rrbot/train/atom_calibration.json -test_json $ATOM_DATASETS/rrbot/train/dataset.json --sensor_source rgb_right --sensor_target rgb_left -sfr -sfrn /home/rigeluser/rgb_to_rgb_results.csv && cd /home/rigeluser/ && ls"]
            
            envs:
              DISPLAY: ":99"

            volumes:
              - !!python/tuple ["/tmp/.X11-unix", "/tmp/.X11-unix"]
            
            introspection: False

  calibrate_riwmpbot:
    plugin: "rigel.plugins.core.ComposePlugin"
    with:
      timeout: 300.0
      components:
        -
            name: "calibration_evaluation"
            image: "dvieira2001/atom:latest"

            artifacts: 
              - "/home/rigeluser/single_rgb_results.csv"

            command: ["/bin/bash", "-c", "xvfb-run -a rosrun atom_calibration calibrate -json $ATOM_DATASETS/riwmpbot/train/dataset.json -v -nig {{ data.trans_noise }} {{ data.rot_noise }} -ctgt -jbn shoulder_pan_joint shoulder_lift_joint elbow_joint wrist_1_joint wrist_2_joint wrist_3_joint -jbp origin_yaw origin_yaw origin_yaw origin_yaw origin_yaw origin_yaw -jbv 0.03 -0.02 0.03 -0.1 0.04 -0.09 && xvfb-run -a rosrun atom_evaluation single_rgb_evaluation -train_json $ATOM_DATASETS/riwmpbot/train/atom_calibration.json -test_json $ATOM_DATASETS/riwmpbot/train/dataset.json -sfr -sfrn /home/rigeluser/single_rgb_results.csv && cd /home/rigeluser/ && ls"]
            
            envs:
              DISPLAY: ":99"

            volumes:
              - !!python/tuple ["/tmp/.X11-unix", "/tmp/.X11-unix"]
            
            introspection: False

  calibrate_rlbot:
    plugin: "rigel.plugins.core.ComposePlugin"
    with:
      timeout: 300.0
      components:
        # -
        #   name: "simulation_and_robot"
        #   image: "dvieira2001/atom:latest"
        #   command: ["roslaunch", "t2rgb_bringup", "t2rgb.launch"]
        #   envs:
        #     DISPLAY: "{{ vars.DISPLAY }}"
          
          # volumes:
          #   - !!python/tuple ["/tmp/.X11-unix", "/tmp/.X11-unix"]
        -
            name: "calibration_evaluation"
            image: "dvieira2001/atom:latest"

            artifacts: 
              - "/home/rigeluser/lidar_to_rgb_results.csv"
            
            command: ["/bin/bash", "-c", "xvfb-run -a rosrun atom_calibration calibrate -json $ATOM_DATASETS/rlbot/train/dataset.json -nig {{ data.trans_noise }} {{ data.rot_noise }} -v && xvfb-run -a rosrun atom_evaluation lidar_to_rgb_evaluation -train_json $ATOM_DATASETS/rlbot/train/atom_calibration.json -test_json $ATOM_DATASETS/rlbot/train/dataset.json -rs lidar_right -cs rgb_left -pn pattern_1 -sfr -sfrn /home/rigeluser/lidar_to_rgb_results.csv && cd /home/rigeluser/ && ls"]
            
            envs:
              DISPLAY: ":99"

            volumes:
              - !!python/tuple ["/tmp/.X11-unix", "/tmp/.X11-unix"]
            
            introspection: False

  compose_rigelfile_test:
    plugin: "rigel.plugins.core.ComposePlugin"
    with:
      timeout: 300.0
      components:

        -
          name: app
          image: "dvieira2001/atom:latest"

          command: ["roslaunch", "t2rgb_bringup", "app_launch.launch", "motion_sequence_file:=/home/rigeluser/ros_workspace/src/t2rgb/movement_sequences/movement_sequence.json", "output_folder:=/home/rigeluser/ros_workspace/src/t2rgb/datasets/new_dataset", "overwrite:=true"]

          envs:
            DISPLAY: "{{ vars.DISPLAY }}"
          volumes:
            - !!python/tuple ["/tmp/.X11-unix", "/tmp/.X11-unix"]
          devices:
            - "/dev/dri:/dev/dri"

        # -
        #   name: "simapp"
        #   image: "dvieira2001/atom:latest"
        #   command: ["roslaunch", "t2rgb_bringup", "simapp_launch.launch", "motion_sequence_file:=/home/rigeluser/ros_workspace/src/t2rgb/movement_sequences/movement_sequence.json"]

        #   # command: ["/bin/bash", "-c", "source /home/rigeluser/ros_workspace/devel/setup.bash && roslaunch t2rgb_bringup simapp_launch.launch motion_sequence_file:=/home/rigeluser/ros_workspace/src/t2rgb/movement_sequences/movement_sequence.json"]

        #   envs:
        #     DISPLAY: "{{ vars.DISPLAY }}"
        #   volumes:
        #       - !!python/tuple ["/tmp/.X11-unix", "/tmp/.X11-unix"]
        #   devices:
        #       - "/dev/dri:/dev/dri"

        # -
        #   name: "logger"
        #   image: "dvieira2001/atom:latest"
        #   command: ["rostopic", "echo", "/rosout"]

        # -
        #   name: "robotapp"
        #   image: "dvieira2001/atom:latest"
        #   command: ["roslaunch", "t2rgb_bringup", "robotapp_launch.launch", "output_folder:=/home/rigeluser/ros_workspace/src/t2rgb/datasets/t2rgb", "overwrite:=true"]

        #   # command: ["/bin/bash", "-c", "source /home/rigeluser/ros_workspace/devel/setup.bash && roslaunch t2rgb_bringup robotapp_launch.launch output_folder:=/home/rigeluser/ros_workspace/src/t2rgb/datasets/t2rgb overwrite:=true"]


        #   envs:
        #     DISPLAY: "{{ vars.DISPLAY }}"
        #   volumes:
        #     - !!python/tuple ["/tmp/.X11-unix", "/tmp/.X11-unix"]
        #   devices:
        #     - "/dev/dri:/dev/dri"
          
        #   introspection: False

  # test:
  #   plugin: "rigel.plugins.core.TestPlugin"
  #   with:
  #     timeout: 30.0
  #     requirements:
  #       - 'globally: some /dummy_topic [std_msgs/String]'
        # timeout: 30.0

  
  introspection_rrbot:
    plugin: "file_intro_plugin.FileIntrospectionPlugin"
    with:
      file: "/home/runner/.rigel/archives/test/latest/calibration_evaluation/rgb_to_rgb_results.csv"
      
      # Value verification
      introspection_target_columns:
        # - "RMS (pix)"
        - "RMS (pix)": {validation_min: 0, validation_max: 2, use_latest_row: False, value_row: 'Averages', acceptable_min: 0, acceptable_max: 1} #Check for strings in result as well as numeric as well as a string's absence

  introspection_riwmpbot:
    plugin: "file_intro_plugin.FileIntrospectionPlugin"
    with:
      file: "/home/runner/.rigel/archives/test/latest/calibration_evaluation/single_rgb_results.csv"
      
      # Value verification
      introspection_target_columns:
        # - "RMS (pix)"
        - "all [px]": {validation_min: 0, validation_max: 2, use_latest_row: False, value_row: 'Averages', acceptable_min: 0, acceptable_max: 1} #Check for strings in result as well as numeric as well as a string's absence

  introspection_rlbot:
    plugin: "file_intro_plugin.FileIntrospectionPlugin"
    with:
      file: "/home/runner/.rigel/archives/test/latest/calibration_evaluation/lidar_to_rgb_results.csv"
      
      # Value verification
      introspection_target_columns:
        # - "RMS (pix)"
        - "RMS (pix)": {validation_min: 0, validation_max: 5, use_latest_row: False, value_row: 'Averages', acceptable_min: 0, acceptable_max: 3} #Check for strings in result as well as numeric as well as a string's absence

  # robomaker:
    # plugin: "rigel.plugins.aws.RoboMakerPlugin"
    # with:
      # iam_role: "{{ vars.AWS_IAM_ROLE }}"
      # output_location: "rigel-robomaker-logs-ireland"
      # simulation_duration: 600
      # 
      # robot_application:
        # ecr: "{{ vars.AWS_ECR }}/atom_image:latest"
        # command: ["roslaunch", "t2rgb_bringup", "robotapp_launch.launch", "output_folder:=$ATOM_DATASETS/t2rgb", "overwrite:=true"]
        # 
        # stream_ui: True
# 
        # environment:
          # - "GAZEBO_MASTER_URI=http://ROBOMAKER_SIM_APP_IP:11345"
          # - "ROS_IP=ROBOMAKER_ROBOT_APP_IP"
          # - "ROS_MASTER_URI=http://localhost:11311"
          # - "ROS_MASTER_URI=http://ROBOMAKER_ROBOT_APP_IP:11311"
          # - "ROS_HOSTNAME=localhost"
        # 
# 
# 
        # ports:
          # - !!python/tuple [9090, 9090]
        # 
        # tools:
          # -
            # name: 'terminal'
            # command: "{{ vars.robomaker_tool_terminal_cmd }}"
            # stream_output_to_cloud_watch: True
            # stream_ui: True
          # 
          # -
            # name: 'rviz'
            # command: "{{ vars.robomaker_tool_rviz_cmd}}"
            # stream_output_to_cloud_watch: True
            # stream_ui: True
          # 
          # -
            # name: 'gzclient'
            # command: "{{ vars.robomaker_tool_gazebo_cmd}}"
            # stream_output_to_cloud_watch: True
            # stream_ui: True
# 
# 
      # simulation_application:
        # ecr: "{{ vars.AWS_ECR }}/atom_image:latest"
        # command: ["roslaunch", "t2rgb_bringup", "simapp_launch.launch", "motion_sequence_file:=/home/rigeluser/ros_workspace/src/t2rgb/movement_sequences/movement_sequence.json"]
# 
        # stream_ui: True
# 
        # environment:
          # - "GAZEBO_MASTER_URI=http://ROBOMAKER_SIM_APP_IP:11345"
          # - "ROS_IP=ROBOMAKER_SIM_APP_IP"
          # - "ROS_MASTER_URI=http://localhost:11311"
          # - "ROS_MASTER_URI=http://ROBOMAKER_ROBOT_APP_IP:11311"
          # - "ROS_HOSTNAME=localhost"
# 
        # ports:
          # - !!python/tuple [9090, 9090]
# 
        # tools:
          # -
            # name: 'terminal'
            # command: "{{ vars.robomaker_tool_terminal_cmd }}"
            # stream_output_to_cloud_watch: True
            # stream_ui: True
          # 
          # -
            # name: 'rviz'
            # command: "{{ vars.robomaker_tool_rviz_cmd}}"
            # stream_output_to_cloud_watch: True
            # stream_ui: True
# 
          # -
            # name: 'gzclient'
            # command: "{{ vars.robomaker_tool_gazebo_cmd}}"
            # stream_output_to_cloud_watch: True
            # stream_ui: True
# 
      # 
# 
      # vpc_config:
        # subnets:
          # - "subnet-0fd55ce2c4695d46f"
          # - "subnet-0dd12d06c4a7e3d90"
        # security_groups:
          # - "sg-0a12d8bb70b2bf1f4"
        # assign_public_ip: True


sequences:
  deploy:
    stages:
      -
        jobs: ["dockerfile", "build"]
  
  test_rrbot_calibration:
    stages:
      -
        matrix:
          trans_noise: [0, 0.5]
          rot_noise: [0, 0.5]
      
        parallel:
          -  
            jobs: ["calibrate_rrbot", "introspection_rrbot"]
  
  test_riwmpbot_calibration:
    stages:
      -
        matrix:
          trans_noise: [0, 0.5]
          rot_noise: [0, 0.5]

        parallel:
          -
            jobs: ["calibrate_riwmpbot", "introspection_riwmpbot"]
  
  test_rlbot_calibration:
    stages:
      -
        matrix:
          trans_noise: [0, 0.5]
          rot_noise: [0, 0.5]

        parallel:
          -
            jobs: ["calibrate_rlbot", "introspection_rlbot"]
 
  test_rrbot_calibration_two_noise_pairs: 
    stages:
      -
        matrix:
          trans_noise: [0]
          rot_noise: [0, 0.5]
          # trans_noise: [0]
          # rot_noise: [0]

        parallel:
          -
            jobs: ["calibrate_rrbot", "introspection_rrbot"]

  test_rrbot_calibration_four_noise_pairs: 
    stages:
      -
        matrix:
          trans_noise: [0, 0.5]
          rot_noise: [0, 0.5]
          # trans_noise: [0]
          # rot_noise: [0]

        parallel:
          -
            jobs: ["calibrate_rrbot", "introspection_rrbot"]

